// 0.3.7
void SetCheckpoint(RPCParameters* rpcParams)
{
    Log::traceLastFunc("[RPC-IN] Set checkpoint");

    unsigned char* Data = reinterpret_cast<unsigned char*>(rpcParams->input);
    int iBitLength = rpcParams->numberOfBitsOfData;

    CVector vecPos;
    float fSize;
    RakNet::BitStream bsData(Data, (iBitLength / 8) + 1, false);
    bsData.Read(vecPos.x);
    bsData.Read(vecPos.y);
    bsData.Read(vecPos.z);
    bsData.Read(fSize);

    CVector vecSize;
    vecSize.x = fSize;
    vecSize.y = fSize;
    vecSize.z = fSize;

    pGPSNavigator->SetTarget({ vecPos.x, vecPos.y, vecPos.z });

    pGame->SetCheckpointInformation(&vecPos, &vecSize);
    pGame->m_bCheckpointsEnabled = true;
}
// 0.3.7
void DisableCheckpoint(RPCParameters* rpcParams)
{
    Log::traceLastFunc("[RPC-IN] Disable checkpoint");

    pGPSNavigator->Clear();

    pGame->m_bCheckpointsEnabled = false;
}
